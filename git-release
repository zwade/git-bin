#!/bin/bash
set -e

if [ $# -ne 1 ]; then
    echo "Usage: git release <staging|rls|demo>"
    exit 1
fi

red="\033[38;5;1m"
green="\033[38;5;2m"
yellow="\033[38;5;3m"
reset="\033[0m"

function merge_from_to {
    local from=$1
    local to=$2

    printf "${yellow}Checking out ${to}${reset}\n"
    git checkout ${to}

    printf "${yellow}Merging ${from} into ${to}$reset\n"
    git fetch origin
    git reset --hard origin/${to}

    printf "${yellow}Showing diff from origin/${to} to origin/${from}${reset}\n"
    git --no-pager log origin/${to}..origin/${from}

    printf "Deploy to ${red}${to}${reset}? [y/N]: "
    read RES

    if [ "$RES" == "y" ]; then
        printf "${red}Deploying to ${to}${reset}\n"
        git merge --ff-only origin/${from}
        git push origin ${to};
    else
        printf "${green}Aborting${reset}\n"
        exit 1
    fi
}

if [ "$1" == "staging" ]; then
    merge_from_to dev staging
elif [ "$1" == "rls" ]; then
    merge_from_to staging rls
elif [ "$1" == "demo" ]; then
    merge_from_to rls demo
else
    printf "${yellow}Unknown deployment branch: ${red}$1${reset}\n"
    exit 1
fi
